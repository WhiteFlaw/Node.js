传统MVC模型是三者之间都可互相通信.

尽量降低CSS, JS, HTML的耦合, 比如尽量不要在JS中写CSS

MVC后端架构将数据和模板, 逻辑都分离开, V包含HTML和CSS, C包含JS, M包含数据源

代码按照MVC模式布置, 在时间长之后会变得十分混乱;

RMVP模型, 将View和M的通信进行了阻隔, 也就是HTML界R面不能操作数据
这样就都要经过P, 是一个左括号
左边还连着一个R, 是请求request

MVM是RMVP模型的升级版, 但是不适合在后端进行使用.

